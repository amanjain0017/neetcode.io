class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int mini = prices[0];
        int ans = 0;
        for(int i =1; i<prices.size(); i++){
            int diff = prices[i] - mini;
            ans = max(ans, diff);
            mini = min(mini, prices[i]);
        }    

        return ans;
    }
};

//using sliding window
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        
        int l = 0, r = 0, maxProfit = 0; 

        for( ;r<prices.size() ;r++){
            if( prices[l] < prices[r]){
                maxProfit = max(maxProfit, prices[r]-prices[l]);
            }
            else{
                l = r;
            }
        }

        return maxProfit;
    }
};